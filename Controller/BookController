package com.LibraryManagmentSystem.LibraryManagmentSystem.Controller;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.LibraryManagmentSystem.LibraryManagmentSystem.Entity.Book;
import com.LibraryManagmentSystem.LibraryManagmentSystem.Service.BookService;

@RestController
@RequestMapping("/api/books")
public class BookController {

	@Autowired
	private BookService bookService;
	
	@GetMapping
	public List<Book> getAllBook(){
		return bookService.findAll();
	}
	
	@GetMapping("/{id}")
	public Book getBook(@PathVariable Long id) {
		return bookService.findById(id);	
	}
	
	@PostMapping
	public void addBook(@RequestBody Book book) {
		 bookService.save(book);
	}
	
	@DeleteMapping
	public void deleteBook(@PathVariable Long id) {
		bookService.deleteById(id);
	}
	
	@PostMapping("/{bookId)/borrow/{userId}")
	public ResponseEntity<Book> borrowBook(@PathVariable Long bookId, @PathVariable Long userId){
		Book borrwedBook = bookService.borrowBook(bookId, userId);
		if(borrwedBook!=null) {
			return ResponseEntity.ok(borrwedBook);
		}else {
			return ResponseEntity.badRequest().build();
		}
	}
	
	@PostMapping("/{bookId)/return")
	public ResponseEntity<Book> returnBook(@PathVariable Long bookId){
		Book returnBook = bookService.returnBook(bookId);
		if(returnBook!=null) {
			return ResponseEntity.ok(returnBook);
		}else {
			return ResponseEntity.badRequest().build();
		}
	}
	
}
